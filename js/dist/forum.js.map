{"version":3,"sources":["webpack://@WiwatSrt/best-answer/webpack/bootstrap","webpack://@WiwatSrt/best-answer/external \"flarum.core.compat['app']\"","webpack://@WiwatSrt/best-answer/external \"flarum.core.compat['extend']\"","webpack://@WiwatSrt/best-answer/external \"flarum.core.compat['models/Discussion']\"","webpack://@WiwatSrt/best-answer/external \"flarum.core.compat['components/CommentPost']\"","webpack://@WiwatSrt/best-answer/external \"flarum.core.compat['Model']\"","webpack://@WiwatSrt/best-answer/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@WiwatSrt/best-answer/external \"flarum.core.compat['helpers/icon']\"","webpack://@WiwatSrt/best-answer/external \"flarum.core.compat['components/Button']\"","webpack://@WiwatSrt/best-answer/external \"flarum.core.compat['components/DiscussionPage']\"","webpack://@WiwatSrt/best-answer/external \"flarum.core.compat['components/Post']\"","webpack://@WiwatSrt/best-answer/external \"flarum.core.compat['components/Badge']\"","webpack://@WiwatSrt/best-answer/external \"flarum.core.compat['components/PostMeta']\"","webpack://@WiwatSrt/best-answer/external \"flarum.core.compat['helpers/username']\"","webpack://@WiwatSrt/best-answer/external \"flarum.core.compat['helpers/userOnline']\"","webpack://@WiwatSrt/best-answer/external \"flarum.core.compat['components/Notification']\"","webpack://@WiwatSrt/best-answer/./src/forum/components/SelectBestAnswerNotification.js","webpack://@WiwatSrt/best-answer/./src/forum/index.js","webpack://@WiwatSrt/best-answer/./src/forum/addBestAnswerAction.js","webpack://@WiwatSrt/best-answer/./src/forum/addBestAnswerAttribute.js","webpack://@WiwatSrt/best-answer/./src/forum/addBestAnswerBadge.js","webpack://@WiwatSrt/best-answer/./src/forum/addBestAnswerFirstPost.js","webpack://@WiwatSrt/best-answer/./src/forum/addBestAnswerNotification.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","__webpack_exports__","SelectBestAnswerNotification","icon","href","discussion","this","props","notification","subject","app","route","content","translator","trans","Notification","initializers","add","commonItem","Discussion","bestAnswerPost","Model","hasOne","bestAnswerUser","startUserId","attribute","Number","firstPostId","canSelectBestAnswer","items","post","isBestAnswer","Button","component","children","className","onclick","save","bestAnswerPostId","id","bestAnswerUserId","session","user","relationships","data","then","current","DiscussionPage","stream","update","redraw","posts","extend","CommentPost","pushAttributes","isHidden","number","canSelectBestAnswerOwnPost","a","PostComponent","attrs","has","Badge","type","label","thisPost","userOnline","config","username","PostMeta","data-number","trust","contentHtml","notificationComponents","selectBestAnswer"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['models/Discussion'];","module.exports = flarum.core.compat['components/CommentPost'];","module.exports = flarum.core.compat['Model'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/DiscussionPage'];","module.exports = flarum.core.compat['components/Post'];","module.exports = flarum.core.compat['components/Badge'];","module.exports = flarum.core.compat['components/PostMeta'];","module.exports = flarum.core.compat['helpers/username'];","module.exports = flarum.core.compat['helpers/userOnline'];","module.exports = flarum.core.compat['components/Notification'];","import Notification from 'flarum/components/Notification';\n\nexport default class SelectBestAnswerNotification extends Notification {\n    icon() {\n        return 'fas fa-check';\n    }\n\n    href() {\n        const notification = this.props.notification;\n        const discussion = notification.subject();\n\n        return app.route.discussion(discussion, 1);\n    }\n\n    content() {\n        return app.translator.trans('flarum-best-answer.forum.notification.content');\n    }\n}\n","import app from 'flarum/app';\nimport Discussion from 'flarum/models/Discussion';\nimport Model from 'flarum/Model';\nimport addBestAnswerAction from './addBestAnswerAction';\nimport addBestAnswerAttribute from './addBestAnswerAttribute';\nimport addBestAnswerBadge from './addBestAnswerBadge';\nimport addBestAnswerFirstPost from './addBestAnswerFirstPost';\nimport addBestAnswerNotification from './addBestAnswerNotification';\n\napp.initializers.add('wiwatSrt-bestAnswer', function() {\n    Discussion.prototype.bestAnswerPost = Model.hasOne('bestAnswerPost');\n    Discussion.prototype.bestAnswerUser = Model.hasOne('bestAnswerUser');\n    Discussion.prototype.startUserId = Model.attribute('startUserId', Number);\n    Discussion.prototype.firstPostId = Model.attribute('firstPostId', Number);\n    Discussion.prototype.canSelectBestAnswer = Model.attribute('canSelectBestAnswer');\n\n    addBestAnswerAction();\n    addBestAnswerAttribute();\n    addBestAnswerBadge();\n    addBestAnswerFirstPost();\n    addBestAnswerNotification();\n});\n","import app from 'flarum/app';\nimport { extend } from 'flarum/extend';\nimport Button from 'flarum/components/Button';\nimport CommentPost from 'flarum/components/CommentPost';\nimport DiscussionPage from 'flarum/components/DiscussionPage';\n\nexport default function() {\n  const commonItem = (items, post, discussion, isBestAnswer) => {\n    items.add(\n      'bestAnswer',\n      Button.component({\n        children: app.translator.trans(\n          isBestAnswer ? 'flarum-best-answer.forum.remove_best_answer' : 'flarum-best-answer.forum.this_best_answer'\n        ),\n        className: 'Button Button--link',\n        onclick: function onclick() {\n          isBestAnswer = !isBestAnswer;\n          discussion\n            .save({\n              bestAnswerPostId: isBestAnswer ? post.id() : 0,\n              bestAnswerUserId: app.session.user.id(),\n              relationships: isBestAnswer\n                ? { bestAnswerPost: post, bestAnswerUser: app.session.user }\n                : delete discussion.data.relationships.bestAnswerPost,\n            })\n            .then(() => {\n              if (app.current instanceof DiscussionPage) {\n                app.current.stream.update();\n              }\n              m.redraw();\n            });\n          if (isBestAnswer) {\n            m.route(app.route.post(discussion.posts()[0]));\n          }\n        },\n      })\n    );\n  };\n\n  extend(CommentPost.prototype, 'actionItems', function(items) {\n    const post = this.props.post;\n    const discussion = this.props.post.discussion();\n    let isBestAnswer = discussion.bestAnswerPost() && discussion.bestAnswerPost().id() === post.id();\n\n    post.pushAttributes({ isBestAnswer });\n\n    if (post.isHidden() || post.number() === 1 || !app.session.user) return;\n\n\n    if (post.user().id() === app.session.user.id() && discussion.canSelectBestAnswerOwnPost()) {\n      commonItem(items, post, discussion, isBestAnswer);\n    }\n\n\n    if (!discussion.canSelectBestAnswer() || post.user().id() === app.session.user.id()) return;\n\n    commonItem(items, post, discussion, isBestAnswer);\n\n  });\n}\n","import app from 'flarum/app';\nimport { extend } from 'flarum/extend';\nimport CommentPost from 'flarum/components/CommentPost';\nimport PostComponent from 'flarum/components/Post';\nimport icon from 'flarum/helpers/icon';\n\nexport default function() {\n    extend(CommentPost.prototype, 'headerItems', function(items) {\n        const post = this.props.post;\n\n        if (\n            post.discussion().bestAnswerPost() &&\n            post\n                .discussion()\n                .bestAnswerPost()\n                .id() === post.id() &&\n            !post.isHidden()\n        ) {\n            items.add(\n                'isBestAnswer',\n                <div className=\"Post--BestAnswer\">\n                    <span>\n                        {icon('fas fa-check')}\n                        {app.translator.trans('flarum-best-answer.forum.best_answer_button')}\n                    </span>\n\n                    <span className='BestAnswer--User'>\n                        {app.translator.trans('flarum-best-answer.forum.best_answer_label', {\n                            user: post.discussion().bestAnswerUser(),\n                            a: <a onclick={() => m.route(app.route.user(post.discussion().bestAnswerUser()))} />\n                        })}\n                    </span>\n                </div>\n            );\n        }\n    });\n\n    extend(PostComponent.prototype, 'attrs', function(attrs) {\n        const post = this.props.post;\n\n        if (\n            post.discussion().bestAnswerPost() &&\n            post\n                .discussion()\n                .bestAnswerPost()\n                .id() === post.id() &&\n            !post.isHidden()\n        ) {\n            attrs.className += ' Post--bestAnswer';\n        }\n    });\n}\n","import app from 'flarum/app';\nimport { extend } from 'flarum/extend';\nimport Badge from 'flarum/components/Badge';\nimport Discussion from 'flarum/models/Discussion';\n\nexport default function() {\n    extend(Discussion.prototype, 'badges', function(items) {\n        if (this.bestAnswerPost() && !items.has('hidden')) {\n            items.add(\n                'bestAnswer',\n                m(Badge, {\n                    type: 'bestAnswer',\n                    icon: 'fas fa-check',\n                    label: app.translator.trans('flarum-best-answer.forum.best_answer'),\n                })\n            );\n        }\n    });\n}\n","import app from 'flarum/app';\nimport { extend } from 'flarum/extend';\nimport CommentPost from 'flarum/components/CommentPost';\nimport icon from 'flarum/helpers/icon';\nimport PostMeta from 'flarum/components/PostMeta';\nimport username from 'flarum/helpers/username';\nimport userOnline from 'flarum/helpers/userOnline';\n\nexport default function() {\n    extend(CommentPost.prototype, 'footerItems', function(items) {\n        const thisPost = this.props.post;\n        const discussion = thisPost.discussion();\n\n        if (discussion.bestAnswerPost() && thisPost.number() === 1 && !thisPost.isHidden()) {\n            const post = discussion.bestAnswerPost();\n\n            if (post.isHidden()) return;\n\n            const user = post.user();\n\n            items.add(\n                'bestAnswerPost',\n                <div className=\"CommentPost\">\n                    <div className=\"Post-header\">\n                        <ul>\n                            <li className=\"item-user\">\n                                <div className=\"PostUser\">\n                                    {userOnline(user)}\n                                    <h3>\n                                        <a href={app.route.user(user)} config={m.route}>\n                                            {username(user)}\n                                        </a>\n                                    </h3>\n                                </div>\n                            </li>\n                            <li className=\"item-meta\">{PostMeta.component({ post })}</li>\n                            <li className=\"Post--BestAnswer\">\n                                <a href={app.route.post(post)} config={m.route} data-number={post.number()}>\n                                    {icon('fas fa-check')}\n                                    {app.translator.trans('flarum-best-answer.forum.best_answer_button')}\n                                </a>\n\n                                <span className=\"BestAnswer--User\">\n                                    {app.translator.trans('flarum-best-answer.forum.best_answer_label', {\n                                        user: discussion.bestAnswerUser(),\n                                        a: <a onclick={() => m.route(app.route.user(discussion.bestAnswerUser()))} />\n                                    })}\n                                </span>\n                            </li>\n                        </ul>\n                    </div>\n                    <div className=\"Post-body\">{m.trust(post.contentHtml())}</div>\n                </div>,\n                -10\n            );\n        }\n    });\n}\n","import SelectBestAnswerNotification from './components/SelectBestAnswerNotification';\n\nexport default () => {\n    app.notificationComponents.selectBestAnswer = SelectBestAnswerNotification;\n};\n"],"sourceRoot":""}